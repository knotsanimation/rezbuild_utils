"""
build and publish the documentation to GitHub
"""
import shutil
import subprocess
import sys
from pathlib import Path

THISDIR = Path(__file__).parent
ROOTDIR = THISDIR.parent

SRCDIR = THISDIR / "source"
BUILDIR = THISDIR / "build"
HTMLDIR = BUILDIR / "html"  # generated by sphinx


def main():
    git_status = subprocess.check_output(
        ["git", "status", "--porcelain"], cwd=ROOTDIR, universal_newlines=False
    )
    if git_status:
        raise RuntimeError("Uncommited changes found.")

    git_last_commit = str(
        subprocess.check_output(
            ["git", "rev-parse", "HEAD"], cwd=ROOTDIR, universal_newlines=False
        ),
        encoding="utf-8",
    )

    commit_msg = f"chore(doc): copied to gh-pages\n\nfrom commit {git_last_commit}"

    shutil.rmtree(BUILDIR, ignore_errors=True)

    # ref: https://gist.github.com/cobyism/4730490?permalink_comment_id=2375522#gistcomment-2375522
    subprocess.check_call(
        ["git", "worktree", "add", str(HTMLDIR), "gh-pages"], cwd=ROOTDIR
    )
    print("calling sphinx-build ...")
    subprocess.check_call(
        [
            "sphinx-build",
            "-M",
            "html",
            str(SRCDIR),
            str(BUILDIR),
        ]
        + sys.argv[1:],
        cwd=THISDIR,
    )
    subprocess.check_call(["git", "add", "--all"], cwd=HTMLDIR)
    subprocess.check_call(["git", "commit", "-m", commit_msg], cwd=HTMLDIR)
    # subprocess.check_call(["git", "push", "origin", "gh-pages"], cwd=HTMLDIR)
    subprocess.check_call(["git", "worktree", "remove", str(HTMLDIR)], cwd=HTMLDIR)


if __name__ == "__main__":
    main()
